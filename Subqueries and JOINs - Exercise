#From Softuni database

#01. Employee Address

SELECT e.employee_id, e.job_title, e.address_id, a.address_text
FROM employees AS e
JOIN addresses AS a 
ON e.address_id = a.address_id
ORDER BY e.address_id LIMIT 5;

#02. Addresses with Towns

SELECT e.first_name, e.last_name,  t.`name`, a.address_text
FROM employees AS e
JOIN addresses AS a
JOIN towns AS t
ON e.address_id = a.address_id AND a.town_id = t.town_id
ORDER BY first_name, last_name 
LIMIT 5

#03. Sales Employee

SELECT e.employee_id, e.first_name, e.last_name, d.`name`
FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE d.`name` = 'Sales'
ORDER BY e.employee_id DESC

#04. Employee Departments

SELECT e.employee_id, e.first_name, e.salary, d.`name`
FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE e.salary > 15000
ORDER BY e.department_id DESC


#05. Employees Without Project

SELECT e.employee_id, e.first_name
FROM employees AS e
LEFT JOIN employees_projects AS ep
ON e.employee_id = ep.employee_id
WHERE ep.project_id IS NULL
ORDER BY e.employee_id DESC
LIMIT 3




#06. Employees Hired After

SELECT  e.first_name, e.last_name, e.hire_date, d.`name` AS dept_name
FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE DATE(e.hire_date) > '1999-01-01' AND d.`name` IN ('Sales', 'Finance')
ORDER BY e.hire_date

#07. Employees with Project

SELECT e.employee_id, e.first_name, p.`name`
FROM employees AS e
JOIN employees_projects AS ep
JOIN projects AS p
ON e.employee_id = ep.employee_id AND ep.project_id = p.project_id
WHERE DATE(p.start_date) > '2002-08-13' AND p.end_date IS NULL
ORDER BY e.first_name, p.`name`
LIMIT 5

#08. Employee 24

SELECT e.employee_id, e.first_name, 
(
	CASE
		WHEN year(p.start_date) > 2004 THEN NULL
        ELSE p.`name`
    END
) AS project_name
FROM employees AS e
JOIN employees_projects AS ep
JOIN projects AS p
ON e.employee_id = ep.employee_id AND ep.project_id = p.project_id
WHERE e.employee_id = 24
ORDER BY project_name

#09. Employee Manager
/* SELF_REFERENCING */

SELECT e.employee_id, e.first_name, m.employee_id, m.first_name AS manager_name
FROM employees AS e 
JOIN employees AS m
ON e.manager_id = m.employee_id
WHERE (e.manager_id = 3 OR e.manager_id = 7) 
ORDER BY e.first_name

#10. Employee Summary
/* SELF_REFERENCING + JOIN*/

SELECT e.employee_id, concat_ws(' ', e.first_name, e.last_name) AS employee_name,
concat_ws(' ', m.first_name, m.last_name) AS manager_name, 
d.`name` AS department_name
FROM employees AS e
JOIN employees AS m 
JOIN departments AS d
ON e.manager_id = m.employee_id AND e.department_id = d.department_id
WHERE e.manager_id IS NOT NULL
ORDER BY e.employee_id
LIMIT 5

#11. Min Average Salary

SELECT AVG(salary) AS min_average_salary
FROM employees
GROUP BY department_id
ORDER BY min_average_salary ASC
LIMIT 1


/*--From geography database--*/

#12. Highest Peaks in Bulgaria

SELECT c.country_code, m.mountain_range, p.peak_name, p.elevation
FROM countries AS c 
JOIN mountains_countries AS mc
ON c.country_code = mc.country_code
JOIN mountains AS m 
ON m.id = mc.mountain_id
JOIN peaks AS p
ON p.mountain_id = m.id
WHERE p.elevation > 2835 AND c.country_code = 'BG'
ORDER BY p.elevation DESC

#13. Count Mountain Ranges

SELECT mc.country_code, COUNT(mc.country_code)
FROM mountains_countries AS mc
JOIN  mountains AS m
ON mc.mountain_id = m.id
WHERE  mc.country_code IN ('US','BG','RU')
GROUP BY mc.country_code

#14. Countries with/out Rivers

SELECT c.country_name, r.river_name
FROM countries AS c 
LEFT OUTER JOIN countries_rivers AS cr ON cr.country_code = c.country_code
LEFT OUTER  JOIN rivers AS r ON r.id = cr.river_id
WHERE c.continent_code = 'AF' 
ORDER BY c.country_name ASC
LIMIT 5

#16. Countries without any Mountains

SELECT COUNT(c.country_code)
FROM countries AS c
LEFT OUTER JOIN mountains_countries AS mc
ON mc.country_code = c.country_code
WHERE mc.mountain_id IS NULL


#17. Highest Peak and Longest River by Country

SELECT c.country_name, MAX(p.elevation) AS highest_peak_elevation, 
MAX(r.length) AS longest_river_length
FROM countries AS c
LEFT JOIN mountains_countries AS mc
ON c.country_code = mc.country_code
JOIN mountains AS m
ON  mc.mountain_id = m.id
LEFT JOIN peaks AS p
ON p.mountain_id = m.id
LEFT JOIN countries_rivers AS cr
ON cr.country_code =  c.country_code
LEFT JOIN rivers AS r
ON cr.river_id = r.id
GROUP BY c.country_name
ORDER BY highest_peak_elevation DESC, longest_river_length DESC, c.country_name
LIMIT 5;



















